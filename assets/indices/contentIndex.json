{
  "/": {
    "title": "blog.mauzy.net",
    "content": "\n## whoami\nHello! Online I usually go by Mauzy or Mauzy0x00. I am a Cyber Security student and information technology enthusiast. \n\nI spend most of my time learning something new in this field and I love that there is no end to what you can learn. I love to help others learn something new or accomplish a task so don't hesitate to ask me for help! \n\n## what is this webpage?\nHere I will be writing posts about things I create, setup or hack! These are written mostly for myself and documenation but I hope that they can help someone like you too! These write-ups are written as I complete tasks and I document issues that I ran into\nalong the way. They will not be perfect so if you decide to follow along and see an issue or misconfiguration please let me know! \n\nAlong with technology write-ups I will also include other things like recipies or fixes on my car that are either unconventional or wasn't well documented :)\n\n\n### Socails\n- [Discord](https://discord.com/users/501925286754123796)\n- [Github](https://github.com/settings/profile)\n- [Youtube](https://www.youtube.com/channel/UCuha68UGRSXoh1RFhjNnDpw)\n- Email: mauzy.mail@proton.me\n",
    "lastmodified": "2024-09-22T21:51:15.030066852-04:00",
    "tags": []
  },
  "/miscellaneous-/": {
    "title": "_index",
    "content": "",
    "lastmodified": "2024-09-22T22:10:03.719984334-04:00",
    "tags": []
  },
  "/miscellaneous-/hidden": {
    "title": "hidden",
    "content": "\n# This page is hidden in menu\n\n# Quondam non pater est dignior ille Eurotas\n\n## Latent te facies\n\nLorem markdownum arma ignoscas vocavit quoque ille texit mandata mentis ultimus,\nfrementes, qui in vel. Hippotades Peleus [pennas\nconscia](http://gratia.net/tot-qua.php) cuiquam Caeneus quas.\n\n- Pater demittere evincitque reddunt\n- Maxime adhuc pressit huc Danaas quid freta\n- Soror ego\n- Luctus linguam saxa ultroque prior Tatiumque inquit\n- Saepe liquitur subita superata dederat Anius sudor\n\n## Cum honorum Latona\n\nO fallor [in sustinui\niussorum](http://www.spectataharundine.org/aquas-relinquit.html) equidem.\nNymphae operi oris alii fronde parens dumque, in auro ait mox ingenti proxima\niamdudum maius?\n\n    reality(burnDocking(apache_nanometer),\n            pad.property_data_programming.sectorBrowserPpga(dataMask, 37,\n            recycleRup));\n    intellectualVaporwareUser += -5 * 4;\n    traceroute_key_upnp /= lag_optical(android.smb(thyristorTftp));\n    surge_host_golden = mca_compact_device(dual_dpi_opengl, 33,\n            commerce_add_ppc);\n    if (lun_ipv) {\n        verticalExtranet(1, thumbnail_ttl, 3);\n        bar_graphics_jpeg(chipset - sector_xmp_beta);\n    }\n\n## Fronde cetera dextrae sequens pennis voce muneris\n\nActa cretus diem restet utque; move integer, oscula non inspirat, noctisque\nscelus! Nantemque in suas vobis quamvis, et labori!\n\n    var runtimeDiskCompiler = home - array_ad_software;\n    if (internic \u003e disk) {\n        emoticonLockCron += 37 + bps - 4;\n        wan_ansi_honeypot.cardGigaflops = artificialStorageCgi;\n        simplex -= downloadAccess;\n    }\n    var volumeHardeningAndroid = pixel + tftp + onProcessorUnmount;\n    sector(memory(firewire + interlaced, wired));",
    "lastmodified": "2024-09-22T21:49:10.730078429-04:00",
    "tags": []
  },
  "/miscellaneous-/recipies/": {
    "title": "_index",
    "content": "\nSome fun recipies I've tried!",
    "lastmodified": "2024-09-22T22:09:42.969985934-04:00",
    "tags": []
  },
  "/miscellaneous-/recipies/Soy-Glazed-Meatloaf/": {
    "title": "_index",
    "content": "With Sesame Roasted Potatoes \u0026 Sauteed Bok Choy (2 servings - 35-45 minutes)\n![Soy Glazed Meatloaf.png](/content/miscellaneous%20/recipies/Soy%20Glazed%20Meatloaf/Soy%20Glazed%20Meatloaf.png)\n# Ingredients:\n- [ ] 10oz Ground Pork (substitute with beef)\n- [ ] 1 Pasture-Raised Egg\n- [ ] 3/4 cup Panko Breadcrumbs\n- [ ] 3/4 lb Potatoes \n- [ ] 2 Cloves Garlic\n- [ ] 10 oz Baby Bok Choy (Three babies)\n- [ ] 2 Scallions (Just 1 is fine)\n- [ ] 1 Tbsp Sesame Oil \n- [ ] 1 Tbsp Rice Vinegar \n- [ ] 2 Tbsps Soy Glaze \n- [ ] 3 Tbsps Cumin-Sichuan Peppercorn Sauce (Substitute with Asian Szechuan sauce)\n# Steps \n## 1. Prepare the ingredients \u0026 make the glaze \n\n- Place an oven rack in the center of the oven; preheat to 450F\n- Wash and dry the fresh produce. \n- Medium dice the **potatoes**.\n- Peel **2 cloves of garlic**; using a zester or the small side of a box grater, finely grade into paste.\n- In a bowl, combine the soy glaze, cumin-Sichuan sauce, and half the vinegar\n## 2. Season the potatoes \n\n- Line a sheet pan with foil.\n- Transfer the **diced potatoes** into a bowl. Drizzle with the **sesame oil** and season with salt and pepper; Toss to coat. Arrange in an even layer on one side of the sheet pan.\n## 3. Roast the meatloaf \u0026 potatoes \n\n- Transfer half the glaze to a separate bowl and set aside for serving.\n- In a bowl, combine the **pork**, **breadcrumbs**, **garlic paste**, and **egg**;  season with salt and pepper. Gently mix to combine.\n- Carefully transfer to the other side of the sheet pan of **seasoned potatoes**.\n- Shape into a tightly packed loaf, about 7 inches by 3 inches.\n- Evenly top the meatloaf with the remaining glaze.\n- Roast 18 to 22 minutes (20 minutes was perfect), or until the potatoes are tender when pierced with a fork and the meatloaf is browned and cooked through (160F)\n- Remove from the oven and let the roasted meatloaf rest at least 2 minutes \n![[Soy-Glazed Meatloaf (prep).png]]\n# 4. Prepare the remaining ingredients \n- Meanwhile, thinly slice the **scallions**, separating the white bottoms and the hollow green tops\n- Cut off and discard the root ends of the **bok choy**; roughly chop, separating the stems and leaves.\n# 5. Cook the bok choy\n- In a medium pan (nonstick), heat a drizzle of **olive oil** on medium-high heat until hot.\n- Add the **chopped bok choy stems** and **sliced white bottoms of the scallions**; season with salt and pepper. Cook, stirring occasionally, 2 to 3 minutes until softened.\n- Add the **chopped bok choy leaves** and **remaining vinegar** (carefully as it may splatter); season with salt and pepper. Cook, stirring frequently, 1 to 2 minutes or until wilted.\n- Turn off the heat \n# 6. Slice the meatloaf \u0026 serve\n- Carefully transfer the **rested meatloaf** to a cutting board and cut along with width into equal-sized pieces.\n- Serve the **sliced meatloaf** with the **roasted potatoes** and cooked **bok choy**. Top the meatloaf with the **reserved glaze**. Garnish with the **sliced green tops of the scallions**.",
    "lastmodified": "2024-09-22T22:08:22.459991761-04:00",
    "tags": []
  },
  "/technology/": {
    "title": "_index",
    "content": "",
    "lastmodified": "2024-09-22T22:09:49.649985449-04:00",
    "tags": []
  },
  "/technology/web-development/": {
    "title": "_index",
    "content": "\nHello World",
    "lastmodified": "2024-09-22T22:09:22.449987455-04:00",
    "tags": []
  },
  "/technology/web-development/self-hosting/": {
    "title": "_index",
    "content": "# Self Host Your Website without Opening Ports\nHere we will be setting up a home server to host a web application without opening any ports on my home network. To accomplish this I'll be using a Cloudflare tunnel.\n\n## 0. Prerequisites\n1. Remote Server\n2. Cloudflare Account\n3. Reliable Internet Connection\n\n\u003e[!warning]\n\u003eA little disclaimer: I am not a professional; just a student. Do your own research but this should help you get up and running. For the most part I am just following Cloudflare and other documentation. I highly recommend you read through official documentation as needed. \n## 1. Configure Server\n1. Make sure you have root permissions\n\t1. `sudo -l` should output (ALL : ALL) ALL on the current user.\n2. Add current user to sudo as root\n\t1. `usermod -aG sudo mauzy`\n3. Install OpenSSH\n\t1. `ufw allow OpenSSH`\n\t2. `ufw enable`\n\t3. `ufw status`\n4. Install nginx \n\t1. `sudo ufw allow 'Nginx HTTP'`\n## 2. Add your site to Cloudflare\n1. Register using Cloudflare\n2. If you have an existing domain, click add site \n3. Copy the name servers from Cloudflare to your registrar\n\t- Ensure DNSSEC is disabled before doing this\n\u003e[!note]\n\u003e DNS Records:\n\u003e This is where you can show everyone on Discord how cool you are by adding your website as a connection.\n\n## 3. Additional Cloudflare settings\n###  Configure DNSSEC\n1. Enable in Cloudflare\n\t1. DNS \u003e Settings\n\t2. Enable DNSSEC\n2. Find walkthrough for your registrar \n3. NameCheap\n\t1. Manage \u003e Advanced DNS \n\t2. Enable DNSSEC\n\t3. Copy values from Cloudflare\n\t4. Save it and wait an hour\n\t\n4. Set SSl/TLS encryption mode to Full(strict)\n\t1. This ensures a secure connection between your origin server and Cloudflare.\n\t2. Cloudflare will validate the SSL certificate on your server. \n\t3. This reduces the chances of man-in-the-middle attacks\n\t\t1. Find it in SSL/TLS \u003e Overview\n\t\t2. Make sure the SSL/TLS recommender is on\n5. Enable Always use Https\n\t1. SSL/TLS \u003e Edge Certificates \n6. Set Authenticated Origin Pulls\n\t1. This ensures only requests from Cloudflare with a valid certificate are accepted by your origin server. It helps to protect against unauthorizes access to your server. \n\t2. SSL/TLS \u003e Origin Server\n## 3. Create a tunnel and download the daemon for your Operating System\n1. Go to your newly added site in Cloudflare\n2. In the access tab, Launch the Zero Trust Platform. They move the location of this all of the time for no reason. \n3. Copy and paste into your server shell\n## 4. Setup Firewall\n1. `curl https://raw.githubusercontent.com/Mauzy0x/Scripts/main/Cloudflare%20IPtable%20setup.sh \u003e\u003e ipScript.sh`\n2. `chmod +x ipScript.sh`\n3. `./ipScript.sh`\n\n## 5. Nginx\n1. Set up server block\n\t1. Create a directory for your domain with the `p` flag to create any necessary parent directories \n\t\t- `sudo mkdir -p /var/www/your_domain/html`\n\t2. Now assign ownership of the directory to the current user\n\t\t- `sudo chown -R $USER:$USER /var/www/your_domain/html`\n\t3. Ensure permissions are correct with chmod\n\t\t- `sudo chmod -R 755 /var/www/your_domain`\n\t\t- This uses octal notation. This recursively ensures the owner has full permissions\n1. Configure Nginx server block\n\t1. `sudo rm /etc/nginx/sites-enabled/default`\n\t2. `sudo nano /etc/nginx/sites-available/your_domain`\n2. Configure nginx configuration file\n```bash\nserver {\n    listen 5552;\n    listen [::]:5552;\n    server_name localhost;\n\n    root /var/www/Mauzy-Site/;\n\n    location / {\n        try_files $uri /html/$uri; # Serve from /html/ if not found\n    }\n\n    location ~* \\.(?:gif|css|js|)$ {\n        try_files $uri =404;\n    }\n\n    location /html/ {\n        index index.html index.htm;\n        try_files $uri $uri/index.html $uri.html =404;\n    }\n    error_page 404 = /404.html;\n}\n```\n3. Allow HTTPS traffic with Nginx Full which allows https and http\n\t1. `sudo ufw allow 'Nginx Full'`\n\t2. `sudo ufw reload`\n4. Test config \n\t1. `sudo nginx -t`\n\t2. `sudo systemctl restart nginx`\n\t\t1. In most cases you can just reload nginx to make changes so that applications don't go down. But in this case, let us restart nginx.\n\t\t\n## 6. Trouble Shooting Connection\n- If for whatever reason something is not working, lets troubleshoot. \n\t1. Let us first make sure we are properly hosting our webpage \n\t\t- `curl localhost:portNo`\n\t\t- If this command does not return your HTML then there is an issue with your NGINX configuration\n\t2. If you get an error where it is 'argo tunnel error' there is an issue where Cloudflare cannot see your service. \n\t\t1. Is your tunnel config pointing to \\http://localhost:portNo ? \n\t\t   It needs to be http and it needs to be the same port number specified in your Nginx config.\n- Errors with the Certifications on your origin server\n\t1. Nginx and openssl not recognizing the PEM file\n\t\t1. I don't know\n\t\t![[Pasted image 20240314000454.png]]![[Pasted image 20240314000517.png]]\n\t\t- The text was copied directly into the terminal and saved\n\t\t- Make sure there aren't any spaces left in your file, they will throw an error",
    "lastmodified": "2024-09-23T23:59:10.134078875-04:00",
    "tags": []
  },
  "/technology/web-development/setting-up-hugo/": {
    "title": "_index",
    "content": "# Setting Up Hugo on Ubuntu LTS server\n\n# Intro\nYou don't need to read this part really :3 Just me blabing.\nI wrote this as I installed and setup Hugo for the first time and documented issues I had along the way. Despite it being documentation for myself, this can also be used as a guide! I decided to use Hugo because I wanted to create a blog section for my website. I tried using Jekyll but I'm not a fan of Ruby. Also, Jekyll and its documentation felt dated compared to Hugo; which is written in Go. Being a fan of Rust I also looked at Zola; However Hugo felt like a better fit. At the end there is an install script.\n- Note: The `$` denotes a terminal command. Anything before `$` denotes the current working directory.\n# Always update \u0026\u0026 upgrade first!\n`~$ sudo apt update \u0026\u0026 sudo apt upgrade -y`\n\n# Install Hugo to Host\n- If you wish do do development on this device, you will want to do the full installation of Hugo on the host for viewing quick updates. Otherwise, the standard version is all you need so you can initialize the Hugo directory for your website.\n`~$ sudo apt install hugo`\n**WARN! :** Apt installs version 0.92.2\n- This is older than the required (at least) v0.112.0 of Hugo. It is annoying how many packages in apt are so old. I had this issue with Jekyll and NodeJS on other projects; creating many headaches. I will consider switching my server to Arch Linux in the future. For now I will remove Hugo and install and build directly from GitHub. \n\n## Remove Hugo\n`~$ sudo apt autoremove hugo`\n\n## Prerequisites\n### Install Go\n1. Download Go\n\t`~$ wget https://go.dev/dl/go1.23.1.linux-amd64.tar.gz`\n- Remove any existing Go installations and expand the archive in `/usr/local/`. Un-taring the archive into an existing `/usr/local/go` tree is known to produce broken Go installations.\n\t`~$ sudo rm -rf /usr/local/go \u0026\u0026 sudo tar -C /usr/local -xzf go1.23.1.linux-amd64.tar.gz`\n2. Add `/usr/local/go/bin/` to the PATH environment variable\n\t`~$ export PATH=$PATH:/usr/local/go/bin`\n3. Verify installation \n\t`~$ go version`\n### Install Dart Sass\n1. Download and expand the Linux-x64.tar release from GitHub\n\t`~$ wget https://github.com/sass/dart-sass/releases/download/1.78.0/dart-sass-1.78.0-linux-x64.tar.gz \u0026\u0026 sudo tar -C /usr/local -xzf dart-sass-1.78.0-linux-x64.tar.gz`\n2. Add `/usr/local/dart-sass` to the PATH environment variable\n\t`~$ export PATH=$PATH:/usr/local/dart-sass`\n3. Verify installation\n\t`~$ sass --version`\n### Clean up!\n`~$ rm go1.23.1.linux-amd64.tar.gz dart-sass-1.78.0-linux-x64.tar.gz`\n\n## Build and install Hugo\n**WARN! :** Change the Hugo build and install directory so that go isn't installed in `~/`\n\n1. Build the extended edition:\n\t`~$ CGO_ENABLED=1 go install -tags extended github.com/gohugoio/hugo@latest`\n2. Add the `/go/bin` PATH environment variable. You can move this go directory somewhere else if you wish; Just be sure to correctly configure your environment variables now and in the future. \n\t`~$ export PATH=$PATH:~/go/bin`\n3. Verify installation \n\t`~$ hugo version`\n\n# Option 2: Create a Docker Container (recommended)\n## Install Docker\n## Create Dockerfile\n## Install Hugo (any) on the Host\n# Initialize the website!\n1. Create directory structure in the `quickstart` directory and change into that directory\n\t`~$ hugo new site quickstart`\n\t`~$ cd quickstart`\n2. Initialize a Git repo\n\t`~$ git init`\n3. Set a theme. In this case, 'ananke'\n\t`~$ git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke`\n\t`$ echo \"theme = 'ananke'\" \u003e\u003e hugo.toml`\n4. Start the development server to view the new website\n\t`~$ hugo server`\n\t- When running this there is a warning:\n\t\t- WARN  deprecated: resources.ToCSS was deprecated in Hugo v0.128.0 and will be removed in a future release. Use css.Sass instead.\n\t\t- I will be ignoring this for now\n\t- Yay! We can see something on `http://localhost:1313/` :]\n\t\n# Add Content \n- Add a new page\n\t`~$ hugo new content content/posts/my-first-post.md`\n\t- This creates a new file in that directory \n\t- Link to information about `draft = true` in the my-first-post.md file in regards to draft, future and expired content information:\n\t\t- https://gohugo.io/getting-started/usage/#draft-future-and-expired-content \n\t- Add some markdown to the file and save \n## Development Server\n- Start the development server\n\t`~/hugo-docker/hugo-site$ sudo ~/.go/bin/hugo server -D`\n\t\tor \n\t`~/hugo-docker/hugo-site$ ~/.go/bin/hugo server --buildDrafts`\n\tHugo is not installed for the root user and many files in the site directory are now owned by the current user. To work around this for development, we will just point to the file path of the Hugo binary and run it that way.\n- Starting in development mode will allow you to see updates to your site as you make them and save http://localhost:1313/\n## Live Server\n1. Build the Docker container \n\t`~/hugo-docker$ docker build -t hugo-test .`\n2. Start the container \n\t`~/hugo-docker$ sudo docker run -p 1313:1313 -v $(pwd)/hugo-site:/app hugo-test`\n\t\n# Configure the Site\n# Automated Install Script\n- https://github.com/Mauzy0x00/Scripts/blob/main/installHugo.sh\n# References\n## Hugo\n- Hugo GitHub repository\n\t- https://github.com/gohugoio/hugo?tab=readme-ov-file\n- Hugo Quick Start Guide\n\t- https://gohugo.io/getting-started/quick-start/\n- Hugo Documentation\n\t- https://gohugo.io/documentation/\n- Hugo Themes\n\t- https://themes.gohugo.io/themes\n## GoLang\n- Download and install \n\t- https://go.dev/doc/install\n- How to Write Go Code (I didn't really read much of this)\n\t- https://go.dev/doc/code#Command\n## Sass\n- This is useless\n\t- https://sass-lang.com/install/\n## Music I listened to while doing this\n- ✦ rally house 5.0 ✦ \\[house ⊹ techno ⊹ lofi mix]\n\t- https://www.youtube.com/watch?v=oqXXgf0mbe4",
    "lastmodified": "2024-09-22T23:01:49.329754076-04:00",
    "tags": []
  }
}